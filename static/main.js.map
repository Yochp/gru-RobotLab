{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/part-list/part-list.component.html","webpack:///./src/app/components/part-list/part-list.component.scss","webpack:///./src/app/components/part-list/part-list.component.ts","webpack:///./src/app/components/robot-list/robot-list.component.html","webpack:///./src/app/components/robot-list/robot-list.component.scss","webpack:///./src/app/components/robot-list/robot-list.component.ts","webpack:///./src/app/services/parts.service.ts","webpack:///./src/app/services/robots.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RobotListComponent } from './components/robot-list/robot-list.component';\nimport { PartListComponent } from './components/part-list/part-list.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/robots', pathMatch: 'full'},\n  {path: 'robots', component: RobotListComponent},\n  {path: 'parts', component: PartListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \":host {\\n  background-image: url('bg.jpg'); }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-header></app-header>\n    <router-outlet></router-outlet>`,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PartListComponent } from './components/part-list/part-list.component';\nimport { RobotListComponent } from './components/robot-list/robot-list.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PartListComponent,\n    RobotListComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"@import url(https://fonts.googleapis.com/css?family=Bangers);\\n:host {\\n  text-align: center;\\n  height: 250px; }\\n:host .title {\\n    margin: 0 auto; }\\n:host h1 {\\n    text-align: center;\\n    font-weight: normal;\\n    color: #ff374b;\\n    text-transform: uppercase;\\n    font-size: 8em;\\n    white-space: nowrap;\\n    font-size: 12vw;\\n    z-index: 1000;\\n    font-family: 'Bangers', cursive;\\n    text-shadow: 5px 5px 0 rgba(0, 0, 0, 0.7); }\\n@media screen and (max-width: 50em) {\\n    :host h1 {\\n      font-size: 20vw; } }\\n:host .logo {\\n    height: 50px; }\\n:host nav {\\n    max-width: 80%;\\n    margin: 10px auto;\\n    display: flex; }\\n:host nav button {\\n      transition: all 0.5s;\\n      font-size: 70px;\\n      font-weight: 600;\\n      flex-grow: 1;\\n      flex-basis: 100px;\\n      outline: none;\\n      cursor: pointer;\\n      border-radius: 3px;\\n      height: 80px;\\n      border-color: transparent;\\n      background: transparent;\\n      color: #6bff57; }\\n:host nav button:hover {\\n        color: white;\\n        -webkit-animation: neon 1.5s ease-in-out infinite alternate;\\n                animation: neon 1.5s ease-in-out infinite alternate; }\\n:host nav .selected {\\n      border: none;\\n      outline: none;\\n      box-shadow: 3px 1px 10px 5px #00ff9b; }\\n@-webkit-keyframes neon {\\n  from {\\n    text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px coral, 0 0 70px coral, 0 0 80px coral, 0 0 100px coral, 0 0 150px coral; }\\n  to {\\n    text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #fff, 0 0 20px coral, 0 0 35px coral, 0 0 40px coral, 0 0 50px coral, 0 0 75px coral; } }\\n@keyframes neon {\\n  from {\\n    text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px coral, 0 0 70px coral, 0 0 80px coral, 0 0 100px coral, 0 0 150px coral; }\\n  to {\\n    text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #fff, 0 0 20px coral, 0 0 35px coral, 0 0 40px coral, 0 0 50px coral, 0 0 75px coral; } }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  template: `\n    <h1 class ='title'>\n      GRU - Robot Lab\n    </h1>\n    <nav>\n      <button routerLink=\"/robots\" routerLinkActive=\"selected\">\n        Robots\n      </button>\n      <button routerLink=\"/parts\" routerLinkActive=\"selected\">\n        Parts\n      </button>\n    </nav>\n  `,\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\\n\\n<div class=\\\"row-cards\\\">\\n\\n  <div *ngFor=\\\"let part of parts$ | async\\\" class=\\\"container\\\">\\n    <ul>\\n      <li ngClass=\\\"card\\\">\\n        <div>\\n          <img src=\\\"/assets/images/cpu.png\\\"/>\\n          <label>\\n            <b>{{part.name}}</b>\\n          </label>\\n        </div>\\n        <div>\\n          <label>ID: </label>{{part.id}}\\n        </div>\\n        <div>\\n          <label>CPU: </label>{{part.cpu}}\\n        </div>\\n        <div>\\n          <label>Engine: </label>{{part.engine}}\\n        </div>\\n        <div>\\n          <label>Type: </label>{{part.type}}\\n        </div>\\n        <button (click)=\\\"editPart(part)\\\">edit</button>\\n        <button (click)=\\\"deletePart(part)\\\">delete</button>\\n      </li>\\n    </ul>\\n\\n  </div>\\n\\n</div>\\n\\n\\n<button (click)=\\\"showNewPart()\\\">Create Part</button>\\n\\n<div ngClass=\\\"card\\\" *ngIf=\\\"showNew\\\">\\n\\n\\n    <label>Name</label><input [(ngModel)]=\\\"tempPart.name\\\" placeholder=\\\"name\\\">\\n\\n\\n\\n    <label>ID</label><input [(ngModel)]=\\\"tempPart.id\\\" placeholder=\\\"name\\\">\\n\\n    <label>CPU</label><input [(ngModel)]=\\\"tempPart.cpu\\\" placeholder=\\\"CPU\\\">\\n    <label>Engine</label><input [(ngModel)]=\\\"tempPart.engine\\\" placeholder=\\\"Engine\\\">\\n    <label>Type</label><input [(ngModel)]=\\\"tempPart.type\\\" placeholder=\\\"type\\\">\\n\\n\\n  <button (click)=\\\"createPart(tempPart)\\\">create</button>\\n\\n\\n\\n</div>\\n\\n<div ngClass=\\\"card change\\\" *ngIf=\\\"showEdit\\\">\\n\\n  <div>\\n    <label>Name</label><input [(ngModel)]=\\\"tempPart.name\\\">\\n  </div>\\n\\n  <div>\\n    <label>ID</label><input [(ngModel)]=\\\"tempPart.id\\\">\\n  </div>\\n\\n  <div>\\n    <label>CPU</label><input [(ngModel)]=\\\"tempPart.cpu\\\">\\n  </div>\\n  <div>\\n    <label>Engine</label><input [(ngModel)]=\\\"tempPart.engine\\\">\\n  </div>\\n  <div>\\n    <label>Type</label><input [(ngModel)]=\\\"tempPart.type\\\">\\n\\n  </div>\\n  <button (click)=\\\"submitPart(tempPart)\\\">submit</button>\\n</div>\\n\\n\\n\"","module.exports = \"input {\\n  width: 150px;\\n  padding: 5px 5px;\\n  margin: 5px 0;\\n  box-sizing: border-box;\\n  display: -webkit-box; }\\n\\n.card, .container .card {\\n  padding: 5px;\\n  min-width: 170px;\\n  min-height: 170px;\\n  color: black;\\n  border: 1px solid coral;\\n  background-color: rgba(249, 249, 249, 0.55);\\n  border-radius: 5px;\\n  display: inline-block;\\n  text-align: left;\\n  position: relative;\\n  margin-left: 50px; }\\n\\nlabel {\\n  font-weight: bold; }\\n\\nbutton {\\n  transition: all 0.5s;\\n  font-size: 15px;\\n  flex-grow: 1;\\n  flex-basis: 100px;\\n  outline: none;\\n  padding: 5px 5px;\\n  margin-top: 20px;\\n  margin-right: 5px;\\n  cursor: pointer;\\n  margin-left: 5px;\\n  border-radius: 5px;\\n  background: transparent;\\n  color: #ff6f1b;\\n  border-color: #ff374b; }\\n\\nbutton:hover {\\n    color: white;\\n    -webkit-animation: neon 1.5s ease-in-out infinite alternate;\\n            animation: neon 1.5s ease-in-out infinite alternate; }\\n\\n.row-cards {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.container {\\n  display: flex;\\n  justify-content: center; }\\n\\n.container img {\\n    width: 30px;\\n    height: 30px;\\n    display: inline; }\\n\\n.container .card img {\\n    margin: 5px; }\\n\\n.container .card div {\\n    display: flex; }\\n\\n.container .card div:first-child label {\\n      padding-top: 15px; }\\n\\n.change {\\n  background-color: rgba(255, 0, 0, 0.3); }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PartsService} from '../../services/parts.service';\nimport {Part} from '../../models/part.model';\nimport {Observable} from 'rxjs/index';\n\n@Component({\n  selector: 'app-part-list',\n  templateUrl: './part-list.component.html',\n  styleUrls: ['./part-list.component.scss']\n})\nexport class PartListComponent implements OnInit {\n  parts$: Observable<Part[]>;\n  showEdit = false;\n  showNew = false;\n\n  tempPart = {\n    cpu: 'cpu',\n    engine: 'engine',\n    id: 0,\n    name: 'name',\n    type: 'type'\n  };\n\n  constructor(private partsService: PartsService) {\n  }\n\n  ngOnInit() {\n    this.parts$ = this.partsService.getParts();\n  }\n\n  editPart(part) {\n    this.tempPart = part;\n    this.showEdit = true;\n    console.log('edit!');\n    console.log(this.tempPart);\n    this.parts$ = this.partsService.getParts();\n\n  }\n\n  deletePart(part) {\n    this.partsService.deletePartsServ(part).subscribe(\n      response => console.log(response),\n      err => console.log(err)\n    );\n   setTimeout(() => {\n     this.parts$ = this.partsService.getParts(); } , 1000);\n\n  }\n\n  submitPart(tempPart) {\n    this.showEdit = false;\n\n    console.log('submit');\n    this.partsService.putParts(tempPart).subscribe(\n      response => console.log(response),\n      err => console.log(err)\n    );\n    this.parts$ = this.partsService.getParts();\n  }\n\n\n  showNewPart() {\n    this.showNew = true;\n  }\n\n  createPart(newpart) {\n    this.showNew = false;\n    console.log('newpart');\n    console.log(newpart);\n    this.partsService.craetePartsServ(newpart).subscribe(\n      response => console.log(response),\n      err => console.log(err)\n    );\n\n    setTimeout(() => {\n      this.parts$ = this.partsService.getParts(); } , 1000);\n\n  }\n}\n\n\n","module.exports = \"\\n\\n\\n<div class=\\\"row-cards\\\">\\n\\n  <div *ngFor=\\\"let robot of robots$ | async\\\" ngClass=\\\"container\\\">\\n    <ul>\\n      <li ngClass=\\\"card\\\">\\n        <div>\\n          <img src=\\\"/assets/images/robotic-arm.png\\\"/>\\n          <label>\\n            <b>{{robot.name}}</b>\\n          </label>\\n        </div>\\n        <div>\\n          <label>ID: </label>{{robot.id}}\\n        </div>\\n        <div>\\n          <label>age: </label>{{robot.age}}\\n        </div>\\n        <div>\\n          <label>Type: </label>{{robot.type}}\\n        </div>\\n\\n        <button (click)=\\\"editRobot(robot)\\\">edit</button>\\n        <button (click)=\\\"deleteRobot(robot)\\\">delete</button>\\n\\n      </li>\\n    </ul>\\n\\n  </div>\\n\\n</div>\\n\\n\\n<button (click)=\\\"showNewRobot()\\\">Create Robot</button>\\n\\n<div ngClass=\\\"card\\\" *ngIf=\\\"showNew\\\">\\n\\n  <div>\\n    <label>Name</label><input [(ngModel)]=\\\"tempRobot.name\\\" placeholder=\\\"name\\\">\\n  </div>\\n\\n  <div>\\n    <label>ID</label><input [(ngModel)]=\\\"tempRobot.id\\\" placeholder=\\\"id\\\">\\n  </div>\\n\\n  <div>\\n    <label>age</label><input [(ngModel)]=\\\"tempRobot.age\\\" placeholder=\\\"age\\\">\\n  </div>\\n  <div>\\n    <label>Type</label><input [(ngModel)]=\\\"tempRobot.type\\\" placeholder=\\\"type\\\">\\n\\n  </div>\\n\\n  <button (click)=\\\"createRobot(tempRobot)\\\">create</button>\\n\\n\\n</div>\\n\\n\\n<div ngClass=\\\"card change\\\" *ngIf=\\\"showEdit\\\">\\n\\n  <div>\\n    <label>Name</label><input [(ngModel)]=\\\"tempRobot.name\\\">\\n  </div>\\n\\n  <div>\\n    <label>ID</label><input [(ngModel)]=\\\"tempRobot.id\\\">\\n  </div>\\n\\n  <div>\\n    <label>age</label><input [(ngModel)]=\\\"tempRobot.age\\\">\\n  </div>\\n  <div>\\n    <label>Type</label><input [(ngModel)]=\\\"tempRobot.type\\\">\\n\\n  </div>\\n  <button (click)=\\\"submitRobot(tempRobot)\\\">submit</button>\\n</div>\\n\\n\\n\\n\"","module.exports = \"input {\\n  width: 150px;\\n  padding: 5px 5px;\\n  margin: 5px 0;\\n  box-sizing: border-box;\\n  display: -webkit-box; }\\n\\n.card, .container .card {\\n  padding: 5px;\\n  min-width: 170px;\\n  min-height: 170px;\\n  color: black;\\n  border: 1px solid coral;\\n  background-color: rgba(249, 249, 249, 0.55);\\n  border-radius: 5px;\\n  display: inline-block;\\n  text-align: left;\\n  position: relative;\\n  margin-left: 50px; }\\n\\nlabel {\\n  font-weight: bold; }\\n\\nbutton {\\n  transition: all 0.5s;\\n  font-size: 15px;\\n  flex-grow: 1;\\n  flex-basis: 100px;\\n  outline: none;\\n  padding: 5px 5px;\\n  margin-top: 20px;\\n  margin-right: 5px;\\n  cursor: pointer;\\n  margin-left: 5px;\\n  border-radius: 5px;\\n  background: transparent;\\n  color: #ff6f1b;\\n  border-color: #ff374b; }\\n\\nbutton:hover {\\n    color: white;\\n    -webkit-animation: neon 1.5s ease-in-out infinite alternate;\\n            animation: neon 1.5s ease-in-out infinite alternate; }\\n\\n.row-cards {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.container {\\n  display: flex;\\n  justify-content: center; }\\n\\n.container img {\\n    width: 30px;\\n    height: 30px;\\n    display: inline; }\\n\\n.container .card img {\\n    margin: 5px; }\\n\\n.container .card div {\\n    display: flex; }\\n\\n.container .card div:first-child label {\\n      padding-top: 15px; }\\n\\n.change {\\n  background-color: rgba(255, 0, 0, 0.3); }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Robot} from '../../models/robot.model';\nimport {RobotsService} from '../../services/robots.service';\nimport {Observable} from 'rxjs/index';\n\n@Component({\n  selector: 'app-robot-list',\n  templateUrl: './robot-list.component.html',\n  styleUrls: ['./robot-list.component.scss']\n})\nexport class RobotListComponent implements OnInit {\n  robots$: Observable<Robot[]>;\n  showEdit = false;\n  showNew = false;\n\n  tempRobot = {\n    age: 'age',\n    id: 0,\n    name: 'name',\n    type: 'type'\n  };\n\n  constructor(private robotsService: RobotsService) {\n  }\n\n  ngOnInit() {\n    this.robots$ = this.robotsService.getRobots();\n  }\n\n\n  editRobot(robot) {\n    this.tempRobot = robot;\n    this.showEdit = true;\n    console.log('edit!');\n    console.log(this.tempRobot);\n  }\n\n  submitRobot(tempRobot) {\n    this.showEdit = false;\n\n    console.log('submit');\n    this.robotsService.putRobot(tempRobot).subscribe(\n      response => console.log(response),\n      err => console.log(err)\n    );\n    this.robots$ = this.robotsService.getRobots();\n\n  }\n\n\n  showNewRobot() {\n    this.showNew = true;\n  }\n\n\n  deleteRobot(robot) {\n    this.robotsService.deleteRobotServ(robot).subscribe(\n      response => console.log(response),\n      err => console.log(err)\n    );\n    setTimeout(() => {\n      this.robots$ = this.robotsService.getRobots();\n    }, 1000);\n\n  }\n\n  createRobot(newRobot) {\n    this.showNew = false;\n    console.log('newRobot');\n    console.log(newRobot);\n    this.robotsService.craeteRobotServ(newRobot).subscribe(\n      response => console.log(response),\n      err => console.log(err)\n    );\n    setTimeout(() => {\n      this.robots$ = this.robotsService.getRobots();\n    }, 1000);\n\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {Part} from '../models/part.model';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PartsService {\n  // private partsUrl = 'http://localhost:3000/api/parts';  // URL to web api\n  private partsUrl = '/api/parts';  // URL to web api\n\n  constructor(private http: HttpClient) {\n  }\n\n  getParts(): Observable<Part[]> {\n    return this.http.get<Part[]>(this.partsUrl);\n  }\n\n  putParts(put_Parts): Observable<Part[]> { // continiu\n    return this.http.put<Part[]>(`${this.partsUrl}/${put_Parts.id}`, put_Parts);\n  }\n\n  deletePartsServ(part) {\n    return this.http.delete(`${this.partsUrl}/${part.id}`, part);\n  }\n\n  craetePartsServ(newParts): Observable<Part[]> {\n    return this.http.post<Part[]>(`${this.partsUrl}/${newParts.id}`, newParts);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/index';\nimport {HttpClient} from '@angular/common/http';\nimport {Robot} from '../models/robot.model';\nimport {Part} from '../models/part.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RobotsService {\n  // private robotsUrl = 'http://localhost:3000/api/robots';  // URL to web api\n  private robotsUrl = 'api/robots';  // URL to web api\n\n  constructor(private http: HttpClient) {\n  }\n\n  getRobots(): Observable<Robot[]> {\n    return this.http.get<Robot[]>(this.robotsUrl);\n  }\n\n\n  deleteRobotServ(robot){\n    return this.http.delete(`${this.robotsUrl}/${robot.id}`, robot);\n  }\n\n  putRobot(put_Robot): Observable<Part[]> {\n    return this.http.put<Part[]>(`${this.robotsUrl}/${put_Robot.id}`, put_Robot);\n  }\n\n\n  craeteRobotServ(newRobots): Observable<Part[]> {\n    return this.http.post<Part[]>(`${this.robotsUrl}/${newRobots.id}`, newRobots);\n  }\n}\n\n\n\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}